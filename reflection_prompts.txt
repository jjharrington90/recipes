How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Diff easily pointed out the lines that were removed and added between the two files which made it easy for me to find the differences between the two files and locate any errors.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could save you countless hours of having to re-create code as well as fix and edit an issue or error easily. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   The pro’s to this is having control over what you’re saving in each commit whereas automatic saves don’t give you this type of control.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think it’s simply to allow for better organization which in turn allows you to navigate all related files and commits of those files more easily.

How can you use the commands git log and git diff to view the history of files?

    Running the git log command shows you a complete log of each commit with a corresponding ID and running the git diff command after pasting two different ID’s will show you the changes made between the two commits. 

How might using version control make you more confident to make changes that
could break something?

    Using version control allows you to experiment without fear of going back to a previous version if you accidentally cause a bug or make an error. Essentially, you won’t break anything and if you do, you can go back and correct it.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
